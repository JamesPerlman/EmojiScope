ok, so the hexagonal spiral can be considered a sequence of hexagonal rings of increasing size

how do we get the ring n given an index?

We can get the number of nodes in a ring by the formula
let n be the ring
r(n) = 6 * n + 1
r(n) gives us the number of nodes in that ring

ring : num. nodes
0: 1
1: 7
2: 13
3: 19
4: 25
etc...

given an arbitrary index like 42, we can iteratively subtract the number of nodes in a ring until we hit a result that is < 0 like so:

i = 42
42 - r(0) = 42 - 1 = 41
41 - r(1) = 41 - 7 = 34
34 - r(2) = 34 - 13 = 21
21 - r(3) = 21 - 19 = 2
2 - r(4) = 2 - 25 = -23

-23 < 0 so we know the index must be in ring 3

let's expand what we're doing...

i = 42
42 - r(0) = 42 - 1 = 41
42 - r(0) - r(1) = 42 - 1 - 7 = 34
42 - r(0) - r(1) - r(2) = 42 - 1 - 7 - 13 = 21
42 - r(0) - r(1) - r(2) - r(3) = 42 - 1 - 7 - 13 - 19 = 2
42 - r(0) - r(1) - r(2) - r(3) - r(4) = 42 - 1 - 7 - 13 - 19 - 25 = -23

let's define a function R(n) which gives us the number of nodes in all rings up to ring n

R(n) = r(0) + r(1) + ... + r(n - 1) + r(n)
R(n) = ∑(0, n) r(n)

R(3) = (6 * 0 + 1) + (6 * 1 + 1) + (6 * 2 + 1) + (6 * 3 + 1)
= (6 * 0) + 1 + (6 * 1) + 1 + (6 * 2) + 1 + (6 * 3) + 1
= 6 * (0 + 1 + 2 + 3) + 4
= 6 * ∑(0, 3)1 + 4

= 6 * (1 / 2) * 3 * (3 + 1) + 4
R(3) = (6 / 2) * 3 * (4) + 4
R(n) = 3 * n * (n + 1) + (n + 1)
R(n) = (n + 1) * (3 * n + 1)

some tests...
R(0) = (0 + 1) * (3 * 0 + 1) = 1 * 1 = 1
R(1) = (1 + 1) * (3 * 1 + 1) = 2 * 4 = 8
R(2) = (2 + 1) * (3 * 2 + 1) = 3 * 7 = 21
R(3) = (3 + 1) * (3 * 3 + 1) = 4 * 10  = 40
yes those are correct!

SO HERE IT IS! THE EQUATION WE HAVE ALL BEEN WAITING FOR!

R(n) = (n + 1) * (3 * n + 1)

BOOM!

btw, summation: s(n) = ∑(0, n)1 (summation 1 from 0 to n) = (1 / 2) * n * (n + 1)


------

OK now we need to set up some inequalities

i - R(n) > 0
i - R(n + 1) < 0

question... should it be <= 0 ?
can one index belong to more than one ring? I don't think so.  But one of these should be >= 0 ... or both
I think both.

(1) i - R(n) >= 0
(2) i - R(n + 1) <= 0

---

(1) i >= R(n) 
(2) i <= R(n + 1)
R(n + 1) >= i >= R(n)

R(n + 1) will never equal R(n) so I believe this is safe

---

(1) i >= (n + 1) * (3 * n + 1)
(2) i <= ((n + 1) + 1) * (3 * (n + 1) + 1)
(2) i <= (n + 2) * (3 * n + 4)
now we solve for n

---
Solving for n in (1)

i >= (n + 1) * (3 * n + 1)
i >= 3n^2 + 4n + 1

it's quadratic!
0 = 3n^2 + 4n + (1 - i)

root 1 (+)
n = (-4 + sqrt(16 - 12(1 - i))) / 6

root 2 (-)
n = (-4 - sqrt(16 - 12(1 - i))) / 6

we toss out root 2 (the negative result) since a ring with a negative index is meaningless in our context

root 1 (+)
n = (-2 + sqrt(4 - 3 * (1 - i))) / 3
----

Now solving for n in (2)

i <= (n + 2) * (3 * n + 4)
i <= (n + 2) * (3 * n) + (n + 2) * (4)
i <= n * (3 * n) + 2 * (3 * n) + (2 + n) + 4
i <= 3n^2 + 6n + 4n + 8
i <= 3n^2 + 10n + 8

quadratic equation time!
0 = 3n^2 + 10n + (8 - i)
a = 3
b = 10
c = 8 - i

n = (-b ± sqrt(b^2 - 4ac)) / 2a

- root is always negative so we can discard it

n = (-10 + sqrt(10^2 - 4(3)(8 - i)) / (2 * 3)
n = (-5 + sqrt(25 - 3 * (8 - i)) / (3)

-----

Now let's define a function I(i) which gets the current ring for index indexToXY
By the way, how should we define ring indices?

What ring does index 0, point (0, 0) belong to?
It's a degenerate ring consisting of 1 nodes

R(0) = 1, so we can call that ring 0.

So then I(0) should = 0
I(1) = 1

R(1) = 8, so therefore
I(8) = 2.  Remember that indices are zero-based, but R(n) returns the node count up to and including ring n
So there are 8 nodes total by the end of ring 1
But index 8 is the 9th node, and thus is the first node in ring 2

ok so let's recall our previous positive quadratic solutions and make functions from them
r1(i) = (-5 + sqrt(25 - 3 * (8 - i))) / 3
r2(i) = (-2 + sqrt(4 - 3 * (1 - i))) / 3

It seems that just r1 is sufficient to calculate the ring index as follows:

I(i) = floor(r1(i)) + 1